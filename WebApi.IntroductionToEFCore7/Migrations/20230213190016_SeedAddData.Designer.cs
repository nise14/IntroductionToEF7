// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.IntroductionToEFCore7.Context;

#nullable disable

namespace WebApi.IntroductionToEFCore7.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230213190016_SeedAddData")]
    partial class SeedAddData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GenderMovie", b =>
                {
                    b.Property<int>("GendersId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.HasKey("GendersId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("GenderMovie");

                    b.HasData(
                        new
                        {
                            GendersId = 5,
                            MoviesId = 4
                        },
                        new
                        {
                            GendersId = 5,
                            MoviesId = 5
                        },
                        new
                        {
                            GendersId = 6,
                            MoviesId = 6
                        });
                });

            modelBuilder.Entity("WebApi.IntroductionToEFCore7.Entities.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<decimal>("Fortune")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1948, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fortune = 15000m,
                            Name = "Samuel L Jackson"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1965, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fortune = 18000m,
                            Name = "Robert Downey Jr"
                        });
                });

            modelBuilder.Entity("WebApi.IntroductionToEFCore7.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsRecommend")
                        .HasColumnType("bit");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Content = "Muy buena!!!",
                            IsRecommend = true,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 4,
                            Content = "Dura dura",
                            IsRecommend = true,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 5,
                            Content = "no debieron hacer eso...",
                            IsRecommend = false,
                            MovieId = 6
                        });
                });

            modelBuilder.Entity("WebApi.IntroductionToEFCore7.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Name = "Science fiction"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Animation"
                        });
                });

            modelBuilder.Entity("WebApi.IntroductionToEFCore7.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("InCinema")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("Date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            InCinema = false,
                            ReleaseDate = new DateTime(2019, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Avengers Endgame"
                        },
                        new
                        {
                            Id = 5,
                            InCinema = false,
                            ReleaseDate = new DateTime(2021, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Spiderman: No way home"
                        },
                        new
                        {
                            Id = 6,
                            InCinema = false,
                            ReleaseDate = new DateTime(2022, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Spiderman: Across the Spider-Verse (Part one)"
                        });
                });

            modelBuilder.Entity("WebApi.IntroductionToEFCore7.Entities.MovieActor", b =>
                {
                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Character")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("ActorId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieActors");

                    b.HasData(
                        new
                        {
                            ActorId = 2,
                            MovieId = 5,
                            Character = "Nick Fury",
                            Order = 1
                        },
                        new
                        {
                            ActorId = 2,
                            MovieId = 4,
                            Character = "Nick Fury",
                            Order = 2
                        },
                        new
                        {
                            ActorId = 3,
                            MovieId = 4,
                            Character = "Iron Man",
                            Order = 1
                        });
                });

            modelBuilder.Entity("GenderMovie", b =>
                {
                    b.HasOne("WebApi.IntroductionToEFCore7.Entities.Gender", null)
                        .WithMany()
                        .HasForeignKey("GendersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.IntroductionToEFCore7.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.IntroductionToEFCore7.Entities.Comment", b =>
                {
                    b.HasOne("WebApi.IntroductionToEFCore7.Entities.Movie", "Movie")
                        .WithMany("Comments")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("WebApi.IntroductionToEFCore7.Entities.MovieActor", b =>
                {
                    b.HasOne("WebApi.IntroductionToEFCore7.Entities.Actor", "Actor")
                        .WithMany("MovieActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.IntroductionToEFCore7.Entities.Movie", "Movie")
                        .WithMany("MovieActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("WebApi.IntroductionToEFCore7.Entities.Actor", b =>
                {
                    b.Navigation("MovieActors");
                });

            modelBuilder.Entity("WebApi.IntroductionToEFCore7.Entities.Movie", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("MovieActors");
                });
#pragma warning restore 612, 618
        }
    }
}
